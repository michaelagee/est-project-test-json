{"ast":null,"code":"var _jsxFileName = \"/Users/mikeagee/Dev/estimation-tool-react/client/src/components/estimation-block/estimation.details.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport AddEstimationWizard from '../../pages/detail.page.component';\nimport EstimationInvoice from '../estimation-invoice/estimation.invoice.component';\nimport { Button, Form } from 'react-bootstrap';\nimport { FormContext } from '../../context/Form.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EstimationDetails = props => {\n  _s();\n\n  let rate = 225;\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [estimation, updateEstimation] = useState(props.estimation);\n  const {\n    form\n  } = useContext(FormContext);\n\n  const onClick = () => {\n    if (showEditForm) {\n      toggleEditForm(false);\n    } else {\n      toggleEditForm(true);\n    }\n  };\n\n  function toggleEditForm(showForm) {\n    setShowEditForm(showForm);\n    props.setShowStepWizard(showForm);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n    value: {\n      form\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Estimate Details : \", props.estimation.name, \" - \", props.estimation.application_type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Hours: 780 : Rate: $\", rate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: onClick,\n        children: showEditForm ? 'Save Changes' : 'Edit form'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), showEditForm ? /*#__PURE__*/_jsxDEV(AddEstimationWizard, {\n        initialStep: 1,\n        getTotalCost: props.getTotalCost,\n        updateTotalCost: props.updateTotalCost,\n        totalCost: props.totalCost,\n        rate: rate,\n        estimation: props.estimation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(EstimationInvoice, {\n        getTotalCost: props.getTotalCost,\n        updateTotalCost: props.updateTotalCost,\n        totalCost: props.totalCost,\n        rate: rate,\n        estimation: props.estimation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EstimationDetails, \"GzkMQMqxR5NyMZpNrKDE3sCQ+bE=\");\n\n_c = EstimationDetails;\nexport default EstimationDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"EstimationDetails\");","map":{"version":3,"sources":["/Users/mikeagee/Dev/estimation-tool-react/client/src/components/estimation-block/estimation.details.component.jsx"],"names":["React","useContext","useState","AddEstimationWizard","EstimationInvoice","Button","Form","FormContext","EstimationDetails","props","rate","showEditForm","setShowEditForm","estimation","updateEstimation","form","onClick","toggleEditForm","showForm","setShowStepWizard","name","application_type","getTotalCost","updateTotalCost","totalCost"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,iBAAP,MAA8B,oDAA9B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AACnC,MAAIC,IAAI,GAAG,GAAX;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACW,UAAD,EAAaC,gBAAb,IAAiCZ,QAAQ,CAACO,KAAK,CAACI,UAAP,CAA/C;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWd,UAAU,CAACM,WAAD,CAA3B;;AAGA,QAAMS,OAAO,GAAG,MAAM;AACpB,QAAIL,YAAJ,EAAkB;AAChBM,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAFD,MAEO;AACLA,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAND;;AAQA,WAASA,cAAT,CAAwBC,QAAxB,EAAkC;AAChCN,IAAAA,eAAe,CAACM,QAAD,CAAf;AACAT,IAAAA,KAAK,CAACU,iBAAN,CAAwBD,QAAxB;AACD;;AAAA;AAED,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACH,MAAAA;AAAD,KAA7B;AAAA,2BACE;AAAA,8BACE;AAAA,0CAAwBN,KAAK,CAACI,UAAN,CAAiBO,IAAzC,SAAkDX,KAAK,CAACI,UAAN,CAAiBQ,gBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,iDAA8BX,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAEM,OAAnC;AAAA,kBACGL,YAAY,GAAG,cAAH,GAAoB;AADnC;AAAA;AAAA;AAAA;AAAA,cAHF,EAOGA,YAAY,gBACP,QAAC,mBAAD;AACE,QAAA,WAAW,EAAE,CADf;AAEE,QAAA,YAAY,EAAEF,KAAK,CAACa,YAFtB;AAGE,QAAA,eAAe,EAAEb,KAAK,CAACc,eAHzB;AAIE,QAAA,SAAS,EAAEd,KAAK,CAACe,SAJnB;AAKE,QAAA,IAAI,EAAEd,IALR;AAME,QAAA,UAAU,EAAED,KAAK,CAACI;AANpB;AAAA;AAAA;AAAA;AAAA,cADO,gBASX,QAAC,iBAAD;AAAmB,QAAA,YAAY,EAAEJ,KAAK,CAACa,YAAvC;AAAqD,QAAA,eAAe,EAAEb,KAAK,CAACc,eAA5E;AAA6F,QAAA,SAAS,EAAEd,KAAK,CAACe,SAA9G;AAAyH,QAAA,IAAI,EAAEd,IAA/H;AAAqI,QAAA,UAAU,EAAED,KAAK,CAACI;AAAvJ;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA3CD;;GAAML,iB;;KAAAA,iB;AA6CN,eAAeA,iBAAf","sourcesContent":["import React, { useContext, useState } from 'react'\nimport AddEstimationWizard from '../../pages/detail.page.component';\nimport EstimationInvoice from '../estimation-invoice/estimation.invoice.component';\nimport { Button, Form } from 'react-bootstrap';\nimport { FormContext } from '../../context/Form.context';\n\nconst EstimationDetails = (props) => {\n  let rate = 225;\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [estimation, updateEstimation] = useState(props.estimation)\n  const { form } = useContext(FormContext)\n\n\n  const onClick = () => {\n    if (showEditForm) {\n      toggleEditForm(false);\n    } else {\n      toggleEditForm(true)\n    }\n  };\n\n  function toggleEditForm(showForm) {\n    setShowEditForm(showForm)\n    props.setShowStepWizard(showForm)\n  };\n\n  return (\n    <FormContext.Provider value={{form}}>\n      <div>\n        <h1>Estimate Details : {props.estimation.name} - {props.estimation.application_type}</h1>\n        <p>Total Hours: 780 : Rate: ${rate}</p>\n        <Button variant=\"primary\" onClick={onClick}>\n          {showEditForm ? 'Save Changes' : 'Edit form'}\n        </Button>\n        {/* <AddEstimationWizard getTotalCost={props.getTotalCost} updateTotalCost={props.updateTotalCost} totalCost={props.totalCost} rate={rate} estimation={props.estimation} /> */}\n        {showEditForm ?\n              <AddEstimationWizard\n                initialStep={1}\n                getTotalCost={props.getTotalCost}\n                updateTotalCost={props.updateTotalCost}\n                totalCost={props.totalCost}\n                rate={rate}\n                estimation={props.estimation} />\n           :\n          <EstimationInvoice getTotalCost={props.getTotalCost} updateTotalCost={props.updateTotalCost} totalCost={props.totalCost} rate={rate} estimation={props.estimation} />\n        }\n      </div>\n    </FormContext.Provider>\n  )\n}\n\nexport default EstimationDetails\n"]},"metadata":{},"sourceType":"module"}