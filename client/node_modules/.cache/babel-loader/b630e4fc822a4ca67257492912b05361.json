{"ast":null,"code":"var _jsxFileName = \"/Users/mikeagee/Dev/estimation-tool-react/client/src/components/forms/add-estimation-form.1.component.jsx\";\nimport React, { useContext, useState } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { states } from '../../constants/states';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddEstimationForm1(props) {\n  let stateAbreviations = states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n    children: state\n  }, state, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 51\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"form-1-project-name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Project Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"projectName\",\n          value: props.formValues.projectName,\n          onChange: props.handleChange,\n          placeholder: props.estimation.name,\n          defaultValue: props.estimation.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"form1-client-name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Client Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"clientName\",\n          value: props.formValues.clientName,\n          onChange: props.handleChange,\n          placeholder: \"The Clients Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"form1-estimation-author-name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Estimation Author Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"authorName\",\n          value: props.formValues.authorName,\n          onChange: props.handleChange,\n          placeholder: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"form1-client-address\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Client Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"clientAddress\",\n        value: props.formValues.clientAddress,\n        onChange: props.handleChange,\n        placeholder: \"1234 Main St\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formGridAddress2\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Client Address 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"clientAddress2\",\n        value: props.formValues.clientAddress2,\n        onChange: props.handleChange,\n        placeholder: \"Apartment, studio, or floor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridCity\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"clientAddressCity\",\n          value: props.formValues.clientAddressCity,\n          onChange: props.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          type: \"select\",\n          name: \"clientAddressState\",\n          value: props.formValues.clientAddressState,\n          onChange: props.handleChange,\n          defaultValue: \"Choose...\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Choose...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), stateAbreviations]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridZip\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Zip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"clientAddressZip\",\n          value: props.formValues.clientAddressZip,\n          onChange: props.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Col,\n      controlId: \"formGridNewOrExisting\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Is this a new or existing project?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        type: \"select\",\n        name: \"newOrExistingProject\",\n        value: props.formValues.newOrExistingProject,\n        onChange: props.handleChange,\n        defaultValue: \"Choose...\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Choose...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Existing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      id: \"formGridCheckbox\",\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        name: \"clientBudget\",\n        checked: props.formValues.clientBudget,\n        onChange: props.handleChange,\n        value: props.formValues.clientBudget,\n        label: \"Did the client give a budget estimation?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: props.nextStep,\n      children: \"Next Step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AddEstimationForm1;\nexport default AddEstimationForm1;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEstimationForm1\");","map":{"version":3,"sources":["/Users/mikeagee/Dev/estimation-tool-react/client/src/components/forms/add-estimation-form.1.component.jsx"],"names":["React","useContext","useState","Form","Row","Col","Button","states","AddEstimationForm1","props","stateAbreviations","map","state","formValues","projectName","handleChange","estimation","name","clientName","authorName","clientAddress","clientAddress2","clientAddressCity","clientAddressState","clientAddressZip","newOrExistingProject","clientBudget","nextStep"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { states } from '../../constants/states';\n\n\nfunction AddEstimationForm1(props) {\n    let stateAbreviations = states.map((state) => <option key={state}>{state}</option>);\n\n    return (\n        <Form>\n            <Row className=\"mb-3\">\n                <Form.Group as={Col} controlId=\"form-1-project-name\">\n                    <Form.Label>Project Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"projectName\"\n                        value={props.formValues.projectName}\n                        onChange={props.handleChange}\n                        placeholder={props.estimation.name}\n                        defaultValue={props.estimation.name} />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"form1-client-name\">\n                    <Form.Label>Client Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"clientName\"\n                        value={props.formValues.clientName}\n                        onChange={props.handleChange}\n                        placeholder=\"The Clients Name\" />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"form1-estimation-author-name\">\n                    <Form.Label>Estimation Author Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"authorName\"\n                        value={props.formValues.authorName}\n                        onChange={props.handleChange}\n                        placeholder=\"Your Name\" />\n                </Form.Group>\n            </Row>\n\n            <Form.Group className=\"mb-3\" controlId=\"form1-client-address\">\n                <Form.Label>Client Address</Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    name=\"clientAddress\"\n                    value={props.formValues.clientAddress}\n                    onChange={props.handleChange}\n                    placeholder=\"1234 Main St\" />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\n                <Form.Label>Client Address 2</Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    name=\"clientAddress2\"\n                    value={props.formValues.clientAddress2}\n                    onChange={props.handleChange}\n                    placeholder=\"Apartment, studio, or floor\" />\n            </Form.Group>\n\n            <Row className=\"mb-3\">\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"clientAddressCity\"\n                        value={props.formValues.clientAddressCity}\n                        onChange={props.handleChange} />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridState\">\n                    <Form.Label>State</Form.Label>\n                    <Form.Select\n                        type=\"select\"\n                        name=\"clientAddressState\"\n                        value={props.formValues.clientAddressState}\n                        onChange={props.handleChange}\n                        defaultValue=\"Choose...\">\n                        <option>Choose...</option>\n                        {stateAbreviations}\n                    </Form.Select>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                    <Form.Label>Zip</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"clientAddressZip\"\n                        value={props.formValues.clientAddressZip}\n                        onChange={props.handleChange}\n                    />\n                </Form.Group>\n            </Row>\n\n            <Form.Group as={Col} controlId=\"formGridNewOrExisting\">\n                    <Form.Label>Is this a new or existing project?</Form.Label>\n                    <Form.Select\n                        type=\"select\"\n                        name=\"newOrExistingProject\"\n                        value={props.formValues.newOrExistingProject}\n                        onChange={props.handleChange}\n                        defaultValue=\"Choose...\">\n                        <option>Choose...</option>\n                        <option>New</option>\n                        <option>Existing</option>\n                    </Form.Select>\n                </Form.Group>\n\n            <Form.Group className=\"mb-3\" id=\"formGridCheckbox\">\n                <Form.Check \n                type=\"checkbox\" \n                name=\"clientBudget\"\n                checked={props.formValues.clientBudget}\n                onChange={props.handleChange}\n                value={props.formValues.clientBudget}\n                label=\"Did the client give a budget estimation?\" />\n            </Form.Group>\n\n            <Button variant=\"primary\" onClick={props.nextStep}>\n                Next Step\n            </Button>\n        </Form>\n    )\n}\n\nexport default AddEstimationForm1;"]},"metadata":{},"sourceType":"module"}