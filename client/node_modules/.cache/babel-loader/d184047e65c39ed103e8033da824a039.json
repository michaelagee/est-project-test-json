{"ast":null,"code":"var _jsxFileName = \"/Users/mikeagee/Dev/estimation-tool-react/client/src/pages/detail.page.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport form, { FormContext } from '../context/Form.context';\nimport AddEstimationForm1 from '../components/forms/add-estimation-form.1.component';\nimport AddEstimationForm2 from '../components/forms/add-estimation-form.2.component';\nimport AddEstimationForm3 from '../components/forms/add-estimation-form.3.component';\nimport AddEstimationForm4 from '../components/forms/add-estimation-form.4.component';\nimport AddEstimationForm5 from '../components/forms/add-estimation-form.5.component';\nimport AddEstimationForm6 from '../components/forms/add-estimation-form.6.component';\nimport AddEstimationForm7 from '../components/forms/add-estimation-form.7.component';\nimport AddEstimationForm8 from '../components/forms/add-estimation-form.8.component';\nimport AddEstimationForm9 from '../components/forms/add-estimation-form.9.component';\nimport StepWizard from 'react-step-wizard';\nimport { InitialFormValues } from '../components/forms/initialValues/form.initial-values';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddEstimationWizard(props) {\n  _s();\n\n  const rate = 225;\n  const [form, setForm] = useState({ ...InitialFormValues\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedForm = { ...form,\n      [name]: value\n    };\n\n    if (e.target.type === 'checkbox') {\n      updatedForm[e.target.name] = e.target.checked;\n    } else {\n      updatedForm[e.target.name] = e.target.value;\n    } // console.log('form updated: ', updatedForm);\n\n\n    setForm(updatedForm);\n  };\n\n  const onStepChange = (currentStep, started, completed) => {\n    const updatedFormProgress = { ...form\n    };\n    let latestStepCompleted = Math.max(updatedFormProgress.stepCompleted, currentStep.activeStep);\n    updatedFormProgress.stepCompleted = latestStepCompleted;\n    setForm(updatedFormProgress); // console.log('formProgressUpdated', updatedFormProgress);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContext.Consumer, {\n    children: _ref => {\n      let {\n        form\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(StepWizard, {\n        onStepChange: onStepChange,\n        initialStep: 1,\n        children: [/*#__PURE__*/_jsxDEV(AddEstimationForm1, {\n          formValues: form,\n          estimation: props.estimation,\n          handleChange: handleChange,\n          stepName: \"initialDetails\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddEstimationForm2, {\n          formValues: form,\n          estimation: props.estimation,\n          handleChange: handleChange,\n          stepName: \"applicationType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddEstimationForm3, {\n          formValues: form,\n          estimation: props.estimation,\n          handleChange: handleChange,\n          stepName: \"userManagement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddEstimationForm4, {\n          formValues: form,\n          estimation: props.estimation,\n          handleChange: handleChange,\n          stepName: \"media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddEstimationForm5, {\n          formValues: form,\n          estimation: props.estimation,\n          handleChange: handleChange,\n          stepName: \"applicationType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddEstimationForm6, {\n          formValues: form,\n          estimation: props.estimation,\n          handleChange: handleChange,\n          stepName: \"applicationType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddEstimationForm7, {\n          formValues: form,\n          estimation: props.estimation,\n          handleChange: handleChange,\n          stepName: \"applicationType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddEstimationForm8, {\n          formValues: form,\n          estimation: props.estimation,\n          handleChange: handleChange,\n          stepName: \"applicationType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddEstimationForm9, {\n          formValues: form,\n          estimation: props.estimation,\n          handleChange: handleChange,\n          stepName: \"applicationType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddEstimationWizard, \"EgDkCiGpVNoiOCQmZdYKjPmA2io=\");\n\n_c = AddEstimationWizard;\nexport default AddEstimationWizard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEstimationWizard\");","map":{"version":3,"sources":["/Users/mikeagee/Dev/estimation-tool-react/client/src/pages/detail.page.component.jsx"],"names":["React","useState","useContext","form","FormContext","AddEstimationForm1","AddEstimationForm2","AddEstimationForm3","AddEstimationForm4","AddEstimationForm5","AddEstimationForm6","AddEstimationForm7","AddEstimationForm8","AddEstimationForm9","StepWizard","InitialFormValues","AddEstimationWizard","props","rate","setForm","handleChange","e","name","value","target","updatedForm","type","checked","onStepChange","currentStep","started","completed","updatedFormProgress","latestStepCompleted","Math","max","stepCompleted","activeStep","estimation"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport form, { FormContext } from '../context/Form.context';\nimport AddEstimationForm1 from '../components/forms/add-estimation-form.1.component';\nimport AddEstimationForm2 from '../components/forms/add-estimation-form.2.component';\nimport AddEstimationForm3 from '../components/forms/add-estimation-form.3.component';\nimport AddEstimationForm4 from '../components/forms/add-estimation-form.4.component';\nimport AddEstimationForm5 from '../components/forms/add-estimation-form.5.component';\nimport AddEstimationForm6 from '../components/forms/add-estimation-form.6.component';\nimport AddEstimationForm7 from '../components/forms/add-estimation-form.7.component';\nimport AddEstimationForm8 from '../components/forms/add-estimation-form.8.component';\nimport AddEstimationForm9 from '../components/forms/add-estimation-form.9.component';\nimport StepWizard from 'react-step-wizard';\nimport { InitialFormValues } from '../components/forms/initialValues/form.initial-values';\n\nfunction AddEstimationWizard(props) {\n    const rate = 225;\n\n    const [form, setForm] = useState({\n        ...InitialFormValues\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        const updatedForm = {\n            ...form,\n            [name]: value\n        };\n\n        if (e.target.type === 'checkbox') {\n            updatedForm[e.target.name] = e.target.checked;\n        } else {\n            updatedForm[e.target.name] = e.target.value;\n        }\n        // console.log('form updated: ', updatedForm);\n        setForm(updatedForm);\n    }\n\n    const onStepChange = (currentStep, started, completed) => {\n        const updatedFormProgress = {\n            ...form\n        };\n\n        let latestStepCompleted = Math.max(updatedFormProgress.stepCompleted, currentStep.activeStep);\n        updatedFormProgress.stepCompleted = latestStepCompleted\n        setForm(updatedFormProgress)\n        // console.log('formProgressUpdated', updatedFormProgress);\n    }\n\n    return (\n        <FormContext.Consumer>\n            {({ form }) =>\n                < StepWizard onStepChange={onStepChange} initialStep={1} >\n                    <AddEstimationForm1\n                        formValues={form}\n                        estimation={props.estimation}\n                        handleChange={handleChange}\n                        stepName={\"initialDetails\"} />\n                    <AddEstimationForm2\n                        formValues={form}\n                        estimation={props.estimation}\n                        handleChange={handleChange}\n                        stepName={\"applicationType\"} />\n                    <AddEstimationForm3\n                        formValues={form}\n                        estimation={props.estimation}\n                        handleChange={handleChange}\n                        stepName={\"userManagement\"} />\n                    <AddEstimationForm4\n                        formValues={form}\n                        estimation={props.estimation}\n                        handleChange={handleChange}\n                        stepName={\"media\"} />\n                    <AddEstimationForm5\n                        formValues={form}\n                        estimation={props.estimation}\n                        handleChange={handleChange}\n                        stepName={\"applicationType\"} />\n                    <AddEstimationForm6\n                        formValues={form}\n                        estimation={props.estimation}\n                        handleChange={handleChange}\n                        stepName={\"applicationType\"} />\n                    <AddEstimationForm7\n                        formValues={form}\n                        estimation={props.estimation}\n                        handleChange={handleChange}\n                        stepName={\"applicationType\"} />\n                    <AddEstimationForm8\n                        formValues={form}\n                        estimation={props.estimation}\n                        handleChange={handleChange}\n                        stepName={\"applicationType\"} />\n                    <AddEstimationForm9\n                        formValues={form}\n                        estimation={props.estimation}\n                        handleChange={handleChange}\n                        stepName={\"applicationType\"} />\n                </StepWizard>\n            }\n        </FormContext.Consumer >\n    )\n}\n\nexport default AddEstimationWizard;"]},"metadata":{},"sourceType":"module"}