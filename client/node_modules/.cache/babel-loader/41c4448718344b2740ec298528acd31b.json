{"ast":null,"code":"var _jsxFileName = \"/Users/mikeagee/Dev/estimation-tool-react/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport EstimationBlock from \"./components/estimation-block/estimation-block.component\";\nimport \"./App.css\";\nimport \"./dashboard/dashboard.styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport EstimationNavigationBar from \"./components/navigation/vertical.nav.menu.component\";\nimport { CurrentEstimationTotalCost } from \"./context/currentEstimationTotal.context\";\nimport { NewEstimation } from './data/newEstimation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getEstimations = async () => {\n      if (this.state.env === \"local\") {\n        await fetch(\"http://localhost:3001/estimations\").then(response => response.json()).then(estimations => this.setState({\n          estimations: estimations\n        }));\n      }\n\n      if (this.state.env === \"amplify\") {\n        await fetch(\"estimation.json\").then(response => response.json()).then(estimations => this.setState({\n          estimations: estimations.estimations\n        }));\n      }\n    };\n\n    this.getTotalCost = () => {\n      return this.state.totalCost;\n    };\n\n    this.updateName = newName => {\n      console.log('new name', newName);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        searchField: e.target.value\n      });\n    };\n\n    this.searchEstimations = e => {\n      e.preventDefault();\n\n      if (this.state.estimations > 0) {\n        const {\n          estimations,\n          searchField\n        } = this.state;\n        console.log(searchField, 'searchField');\n        const filteredEstimations = estimations.filter(estimation => estimation.name.toLowerCase().includes(searchField.toLowerCase()));\n        this.setState({\n          estimations: filteredEstimations\n        });\n      }\n    };\n\n    this.addNewEstimation = async e => {\n      const {\n        estimations\n      } = this.state;\n      let newEstimation = { ...NewEstimation\n      };\n      newEstimation.id = estimations.length += 1;\n      newEstimation.name = this.state.searchField; // TODO: MOVE THIS TO AN API LAYER\n\n      const response = await fetch(\"http://localhost:3001/estimations\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: JSON.stringify(newEstimation)\n      });\n      this.setState({ ...newEstimation\n      });\n    };\n\n    this.updateTotalCost = totalCost => {\n      console.log(totalCost, \"TOTALCOST\");\n    };\n\n    this.state = {\n      env: \"local\",\n      totalCost: 0,\n      updateName: this.updateName,\n      getTotalCost: this.getTotalCost,\n      updateTotalCost: this.updateTotalCost,\n      estimations: [{\n        name: \"No Project\",\n        id: 0,\n        views: [\"landing\"],\n        general_estimate_features: [\"geolocationn\"],\n        // platform_specific_features: [\"camera\"],\n        capabilities: [\"biometrics\"],\n        media: [\"Image Optimzation\"],\n        random: [{\n          ios: {\n            enabled: true,\n            hours: 20\n          }\n        }]\n      }],\n      searchField: \"\",\n      searchButtonTitle: \"Search\",\n      filteredEstimation: [],\n      newEstimation: {\n        name: '',\n        id: 0,\n        views: [\"landing\"],\n        general_estimate_features: [\"geolocationn\"],\n        // platform_specific_features: [\"camera\"],\n        capabilities: [\"biometrics\"],\n        media: [\"Image Optimzation\"]\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.env === \"local\") {\n      fetch(\"http://localhost:1020\").then(response => response.json()).then(estimations => this.setState({\n        estimations: estimations\n      }));\n    }\n\n    if (this.state.env === \"amplify\") {\n      fetch(\"estimation.json\").then(response => response.json()).then(estimations => this.setState({\n        estimations: estimations.estimations\n      }));\n    }\n  } // TODO: MOVE TO API LAYER\n\n\n  render() {\n    const {\n      estimations,\n      searchField\n    } = this.state;\n    const filteredEstimations = estimations.filter(estimation => estimation.name.toLowerCase().includes(searchField.toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(CurrentEstimationTotalCost.Provider, {\n      value: this.state,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(EstimationNavigationBar, {\n          estimationsCount: filteredEstimations.length,\n          searchHandler: this.handleChange,\n          handleSubmit: filteredEstimations.length > 0 ? this.searchEstimations : this.addNewEstimation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-container\",\n          children: /*#__PURE__*/_jsxDEV(EstimationBlock, {\n            className: \"dashboard-item\",\n            estimationsCount: filteredEstimations.length,\n            totalCost: this.state.totalCost,\n            updateTotalCost: this.updateTotalCost,\n            getTotalCost: this.getTotalCost,\n            updateName: this.updateName,\n            estimations: filteredEstimations.length > 0 ? filteredEstimations : this.state.estimations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mikeagee/Dev/estimation-tool-react/client/src/App.js"],"names":["React","Component","EstimationBlock","EstimationNavigationBar","CurrentEstimationTotalCost","NewEstimation","App","constructor","getEstimations","state","env","fetch","then","response","json","estimations","setState","getTotalCost","totalCost","updateName","newName","console","log","handleChange","e","searchField","target","value","searchEstimations","preventDefault","filteredEstimations","filter","estimation","name","toLowerCase","includes","addNewEstimation","newEstimation","id","length","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","updateTotalCost","views","general_estimate_features","capabilities","media","random","ios","enabled","hours","searchButtonTitle","filteredEstimation","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport EstimationBlock from \"./components/estimation-block/estimation-block.component\";\nimport \"./App.css\";\nimport \"./dashboard/dashboard.styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport EstimationNavigationBar from \"./components/navigation/vertical.nav.menu.component\";\nimport { CurrentEstimationTotalCost } from \"./context/currentEstimationTotal.context\";\nimport { NewEstimation } from './data/newEstimation';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      env: \"local\",\n      totalCost: 0,\n      updateName: this.updateName,\n      getTotalCost: this.getTotalCost,\n      updateTotalCost: this.updateTotalCost,\n      estimations: [\n        {\n          name: \"No Project\",\n          id: 0,\n          views: [\"landing\"],\n          general_estimate_features: [\"geolocationn\"],\n          // platform_specific_features: [\"camera\"],\n          capabilities: [\"biometrics\"],\n          media: [\"Image Optimzation\"],\n          random: [\n            {\n              ios: {\n                enabled: true,\n                hours: 20,\n              },\n            },\n          ],\n        },\n      ],\n      searchField: \"\",\n      searchButtonTitle: \"Search\",\n      filteredEstimation: [],\n      newEstimation: {\n        name: '',\n        id: 0,\n        views: [\"landing\"],\n        general_estimate_features: [\"geolocationn\"],\n        // platform_specific_features: [\"camera\"],\n        capabilities: [\"biometrics\"],\n        media: [\"Image Optimzation\"],\n      },\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.env === \"local\") {\n      fetch(\"http://localhost:1020\")\n        .then((response) => response.json())\n        .then((estimations) => this.setState({ estimations: estimations }));\n    }\n  \n    if (this.state.env === \"amplify\") {\n      fetch(\"estimation.json\")\n        .then((response) => response.json())\n        .then((estimations) =>\n          this.setState({ estimations: estimations.estimations })\n        );\n    }\n  }\n\n  // TODO: MOVE TO API LAYER\n  getEstimations = async() => {\n    if (this.state.env === \"local\") {\n      await fetch(\"http://localhost:3001/estimations\")\n        .then((response) => response.json())\n        .then((estimations) => this.setState({ estimations: estimations }));\n    }\n  \n    if (this.state.env === \"amplify\") {\n      await fetch(\"estimation.json\")\n        .then((response) => response.json())\n        .then((estimations) =>\n          this.setState({ estimations: estimations.estimations })\n        );\n    }\n  }\n\n  getTotalCost = () => {\n    return this.state.totalCost;\n  };\n\n  updateName = (newName) => {\n    console.log('new name', newName)\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  \n  searchEstimations = (e) => {\n    e.preventDefault();\n    if (this.state.estimations > 0) {\n      const { estimations, searchField } = this.state;\n      console.log(searchField, 'searchField');\n      const filteredEstimations = estimations.filter((estimation) =>\n      estimation.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n      this.setState({ estimations: filteredEstimations });\n    }\n  };\n  \n  addNewEstimation = async (e) => {\n    const { estimations } = this.state;\n    \n    let newEstimation = {...NewEstimation}\n    newEstimation.id = estimations.length += 1\n    newEstimation.name = this.state.searchField\n\n    // TODO: MOVE THIS TO AN API LAYER\n    const response = await fetch(\"http://localhost:3001/estimations\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(newEstimation),\n    });\n\n    this.setState({\n      ...newEstimation\n    });\n  };\n\n  updateTotalCost = (totalCost) => {\n    console.log(totalCost, \"TOTALCOST\");\n  };\n\n  render() {\n    const { estimations, searchField } = this.state;\n    const filteredEstimations = estimations.filter((estimation) =>\n      estimation.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <CurrentEstimationTotalCost.Provider value={this.state}>\n        <div className=\"App\">\n          <EstimationNavigationBar\n            estimationsCount={filteredEstimations.length}\n            searchHandler={this.handleChange}\n            handleSubmit={\n              filteredEstimations.length > 0\n                ? this.searchEstimations\n                : this.addNewEstimation\n            }\n          />\n          <div className=\"dashboard-container\">\n            <EstimationBlock\n              className=\"dashboard-item\"\n              estimationsCount={filteredEstimations.length}\n              totalCost={this.state.totalCost}\n              updateTotalCost={this.updateTotalCost}\n              getTotalCost={this.getTotalCost}\n              updateName={this.updateName}\n              estimations={\n                filteredEstimations.length > 0\n                  ? filteredEstimations\n                  : this.state.estimations\n              }\n            ></EstimationBlock>\n          </div>\n        </div>\n      </CurrentEstimationTotalCost.Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}